def gauss(matrix):
    num = len(matrix)

    for i in range(0, num):
        max_el = matrix[i][i]
        max_row = i
        for k in range(i + 1, num):
            if matrix[k][i] > max_el:
                max_el = matrix[k][i]
                max_row = k

        for k in range(i, num + 1):
            temp = matrix[max_row][k]
            matrix[max_row][k] = matrix[i][k]
            matrix[i][k] = temp

        for k in range(i + 1, num):
            multi_var = -matrix[k][i] / matrix[i][i]
            for j in range(i, num + 1):
                if i == j:
                    matrix[k][j] = 0
                else:
                    matrix[k][j] += multi_var * matrix[i][j]
    print(matrix)
    l = [0 for i in range(num)]
    for j in range(num - 1, -1, -1):
        l[j] = matrix[j][num] / matrix[j][j]
        for k in range(j - 1, -1, -1):
            matrix[k][num] -= matrix[k][j] * l[j]


    return l


if __name__ == "__main__":
    mat = [[8.3, 2.66, 4.1, 1.9, -10.01], [3.92, 8.45, 7.74, 2.46, 12.21],
                   [3.77, 7.25, 8.04, 2.28, 14.81], [2.21, 3.61, 1.69, 6.69, -8.35]]
    n = len(mat)
    
    mat2 = []
    for h in range(0,n):
        mat2.append(mat[h])

    x = gauss(mat)

    list_res = "Result:\t"
    for j in range(0, len(x)):
        list_res += str(x[j]) + "\t"
    print(list_res)

    sum = 0
    for i in range(0, n):
        sum += mat[0][i]*x[i]
    print(sum)

